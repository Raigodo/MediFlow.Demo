services:
    nginx:
        container_name: nginx
        image: nginx:mainline
        depends_on:
            - api
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        networks:
            - public_network
            - inner_network
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./certbot/conf:/etc/letsencrypt
    
    api:
        container_name: mediflow.api
        image: ${DOCKER_REGISTRY-}mediflowapi
        depends_on:
            - database
        environment:
            - ConnectionStrings__Database=Host=database;Port=5432;Database=database;Username=postgres;Password=P@55w0rd
            - DataSecurity:EncryptionKeys:Current=hyuE9bcf3VbZRNR5JJGnv06OvnHmVQCA
            - JwtOptions:SecretKey=secretkeysecretkeysecretkeysecretkeysecretkeysecretkey
            - JwtOptions:Audience=audience
            - JwtOptions:Issuer=issuer
            - JwtOptions:ExpiresMinutes=15
            - TimeLimitedToken:SecretKey=secretkeysecretkeysecretkeysecretkeysecretkeysecretkey
        build:
            context: .
            dockerfile: MediFlow.Api/Dockerfile
        networks:
            - public_network
            - database_network

    database:
        container_name: database
        image: postgres:latest
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: P@55w0rd
            POSTGRES_DB: database
        ports:
            - "5432:5432"
        networks:
            - database_network
        volumes:
            - /var/lib/postgresql/data
        restart: always
    

networks:
    public_network:
        driver: bridge
    inner_network:
        internal: true
    database_network:
        internal: true
